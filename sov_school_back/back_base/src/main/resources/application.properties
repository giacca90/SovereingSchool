spring.application.name=back_base

server.port=8080

# Variables de entorno

variable.FRONT=${FRONT}
variable.BACK_BASE=${BACK_BASE}
variable.BACK_STREAM=${BACK_STREAM}
variable.BACK_CHAT=${BACK_CHAT}
variable.FOTOS_DIR=${FOTOS_DIR}
variable.VIDEOS_DIR=${VIDEOS_DIR}


# Ruta absoluta al directorio que contiene los archivos estáticos (por ejemplo, las fotos)
static.resources.location=fotos:/home/matt/Escritorio/Proyectos/SovereingSchool/Fotos

# Conexion a postgreSQL
# Configuración del datasource
spring.datasource.url=jdbc:postgresql://${POSTGRES}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de Hibernate y JPA
# spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configuración limite de carga
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

# Configuración de SSL
server.ssl.key-store=../../keystore.p12
server.ssl.key-store-password=${SSL_PASSWORD}
server.ssl.key-store-type=${SSL_TYPE}
server.ssl.key-alias=${SSL_ALIAS}


security.jwt.private.key=${JWT_KEY}
security.jwt.user.generator=AUTH0-JWT

# Configuración de e-mail de registro
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USER}
spring.mail.password=${GMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Configuración de OAuth2 para GitHub (variables de entorno)
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.client-name=GitHub

# Configuración de OAuth2 para Google (variables de entorno)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google